import org.springframework.boot.gradle.plugin.SpringBootPlugin
buildscript {
	apply from: 'versions.gradle'
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
	}
}

allprojects {
	repositories {
		mavenLocal()
		mavenCentral()
	}
}

subprojects {
	apply plugin: 'java'
	apply plugin: 'java-library'
	apply plugin: 'io.spring.dependency-management'

	group = 'base.test'
	version = "$jarVersion"
	apply plugin: 'jacoco'

	java {
		toolchain {
			languageVersion = JavaLanguageVersion.of(17)
		}
	}

	configurations {
		compileOnly {
			extendsFrom annotationProcessor
		}
		all {
			resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
		}
	}

	dependencyManagement {
		imports {
			mavenBom SpringBootPlugin.BOM_COORDINATES
			mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		}
		overriddenByDependencies = false
	}

	dependencies {
		compileOnly 'org.projectlombok:lombok'
		api 'org.springframework.boot:spring-boot-starter-data-jpa'
		annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
		annotationProcessor 'org.projectlombok:lombok'

		if (System.getProperty("os.arch") == "aarch64") {
			runtimeOnly 'io.netty:netty-resolver-dns-native-macos:4.1.85.Final:osx-aarch_64'
		}

		/* **********  TEST DEPENDENCIES ****************** */
		if (System.getProperty("os.arch") == "aarch64") {
			testRuntimeOnly 'io.netty:netty-resolver-dns-native-macos:4.1.85.Final:osx-aarch_64'
		}
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		testImplementation 'io.projectreactor:reactor-test'
		testImplementation 'com.squareup.okhttp3:mockwebserver:4.9.0'

		testCompileOnly 'org.projectlombok:lombok'
		testAnnotationProcessor 'org.projectlombok:lombok'

		implementation 'com.fasterxml.jackson.core:jackson-databind:2.8.9'
	}

	task allDeps(type: DependencyReportTask)

}


